generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id        Int       @id @default(autoincrement())
  name      String
  type      String
  employees Employee[]  // A business can have multiple employees

  Sales Sales[]

  Inventory Inventory[]

  Customer Customer[]
}

model Employee {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  department String
  role       String
  salary     Int?
  attendance Int?
  leaves     Int? @default(15)
  
  lastAttendanceRecorded DateTime? @default("2025-02-01T00:00:00.000Z")

  business_id Int      // Foreign key (required)
  business    Business @relation(fields: [business_id], references: [id])

  tasks Task[]
}

model Task {
  id          Int      @id @default(autoincrement())  
  title       String   
  description String?  
  status      String   @default("pending")
  dueDate     DateTime? 
  createdAt   DateTime @default(now())  
  updatedAt   DateTime @updatedAt 

  employeeId  Int      
  employee    Employee @relation(fields: [employeeId], references: [id])  
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phone       String   @unique
  address     String
  business_id Int      // Foreign key (required)
  business    Business @relation(fields: [business_id], references: [id])
  sales       Sales[]
}


model Inventory {
  id          Int       @id @default(autoincrement())
  item_name   String
  quantity    Int
  price       Int
  supplier    String
  category    String    @default("null") // Default value added
  business_id Int       // Foreign key (required)
  business    Business  @relation(fields: [business_id], references: [id])
  sales       Sales[]
}



model Sales {
  id            Int       @id @default(autoincrement())
  business_id   Int       // Foreign key (required)
  customer_id   Int
  item_id       Int
  quantity_sold Int
  sale_date     DateTime
  total_price   Float

  // Relations
  business      Business  @relation(fields: [business_id], references: [id]) // Sale must be linked to a business
  customer      Customer  @relation(fields: [customer_id], references: [id])
  item          Inventory @relation(fields: [item_id], references: [id])
}
